{"version":3,"file":"get_approvals.js","sourceRoot":"","sources":["../../../../../src/modules/approvals/modules/get_approvals.ts"],"names":[],"mappings":";;;AAAA,6CAAyC;AACzC,qCAAmC;AAEnC;;GAEG;AACI,MAAM,YAAY,GAAG,KAAK,IAAI,EAAE;IACrC,MAAM,EAAE,GAAG,MAAM,IAAA,sBAAS,GAAE,CAAC;IAC7B,MAAM,OAAO,GAAG,MAAM,cAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;IAE9D,uCAAuC;IACvC,MAAM,SAAS,GAAgB,IAAI,GAAG,EAAE,CAAC;IAEzC,iCAAiC;IACjC,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE;QAClB,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;KAClD;IAED,oDAAoD;IACpD,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC5B,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,IAAI,UAAU,CAAC;QAC9C,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC;QACpC,IAAI,UAAU,IAAI,QAAQ,EAAE;YAC1B,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;SAC7C;KACF;IAED,OAAO,CAAC,GAAG,SAAS,CAAC,CAAC;AACxB,CAAC,CAAC;AAtBW,QAAA,YAAY,gBAsBvB","sourcesContent":["import { requirePr } from \"#/assertions\";\nimport { github } from \"src/infra\";\n\n/**\n * @returns the approvals of the pull request in context\n */\nexport const getApprovals = async () => {\n  const pr = await requirePr();\n  const reviews = await github.getPullRequestReviews(pr.number);\n\n  // Starting with set to prevent repeats\n  const approvals: Set<string> = new Set();\n\n  // Add PR author to approver list\n  if (pr.user?.login) {\n    approvals.add(\"@\" + pr.user.login.toLowerCase());\n  }\n\n  // Only add approvals if the approver has a username\n  for (const review of reviews) {\n    const isApproval = review.state == \"APPROVED\";\n    const reviewer = review.user?.login;\n    if (isApproval && reviewer) {\n      approvals.add(\"@\" + reviewer.toLowerCase());\n    }\n  }\n\n  return [...approvals];\n};\n"]}