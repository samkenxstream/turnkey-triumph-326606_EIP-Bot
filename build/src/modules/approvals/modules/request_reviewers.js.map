{"version":3,"file":"request_reviewers.js","sourceRoot":"","sources":["../../../../../src/modules/approvals/modules/request_reviewers.ts"],"names":[],"mappings":";;;AAAA,uCAAuC;AACvC,6CAAyC;AACzC,qCAAmC;AAEnC;;;;;;;GAOG;AACI,MAAM,gBAAgB,GAAG,KAAK,EAAE,SAAmB,EAAE,EAAE;IAC5D,MAAM,EAAE,GAAG,MAAM,IAAA,sBAAS,GAAE,CAAC;IAC7B,MAAM,eAAe,GAAG,KAAK,EAAE,QAAgB,EAAE,EAAE;QACjD,MAAM,GAAG,GAAG,MAAM,cAAM,CAAC,aAAa,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,IAAI,QAAQ,CAAC;IAC1B,CAAC,CAAC;IAEF,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;IACpE,OAAO,SAAS,CAAC,MAAM,CAAC,kBAAS,CAAC,CAAC;AACrC,CAAC,CAAC;AATW,QAAA,gBAAgB,oBAS3B","sourcesContent":["import { isDefined } from \"src/domain\";\nimport { requirePr } from \"#/assertions\";\nimport { github } from \"src/infra\";\n\n/**\n * Attempts to request a review and returns a list of unchanged users\n * that were failed to request\n *\n * @param reviewers list of github handles or emails to request\n * @returns list of github handles or emails that failed to be requested\n * likely because they are not contributors in the EIPs repo\n */\nexport const requestReviewers = async (reviewers: string[]) => {\n  const pr = await requirePr();\n  const requestReviewer = async (reviewer: string) => {\n    const res = await github.requestReview(pr, reviewer);\n    return !res && reviewer;\n  };\n\n  const requested = await Promise.all(reviewers.map(requestReviewer));\n  return requested.filter(isDefined);\n};\n"]}