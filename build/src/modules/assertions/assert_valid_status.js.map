{"version":3,"file":"assert_valid_status.js","sourceRoot":"","sources":["../../../../src/modules/assertions/assert_valid_status.ts"],"names":[],"mappings":";;;AAAA,uCAAwD;AAExD;;;;;;GAMG;AACI,MAAM,iBAAiB,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,EAAY,EAAE,EAAE;IAC5D,MAAM,aAAa,GAAG,CAAC,GAAG,yBAAgB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzD,IAAI,CAAC,yBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QACtC,OAAO;YACL,GAAG,IAAI,CAAC,IAAI,gBAAgB,IAAI,CAAC,MAAM,sBAAsB;YAC7D,OAAO,aAAa,8CAA8C;SACnE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;SAAM,IAAI,CAAC,yBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QAC7C,MAAM,aAAa,GAAG,CAAC,GAAG,yBAAgB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzD,OAAO;YACL,GAAG,IAAI,CAAC,IAAI,gBAAgB,IAAI,CAAC,MAAM,sBAAsB;YAC7D,OAAO,aAAa,8CAA8C;SACnE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;;QAAM,OAAO;AAChB,CAAC,CAAC;AAdW,QAAA,iBAAiB,qBAc5B","sourcesContent":["import { ALLOWED_STATUSES, FileDiff } from \"src/domain\";\n\n/**\n * determines if the status of either the base or the head are\n * not auto mergeable. A non-auto mergeable status requires editor\n * approval\n *\n * @returns error or undefined\n */\nexport const assertValidStatus = ({ head, base }: FileDiff) => {\n  const allowedStatus = [...ALLOWED_STATUSES].join(\" or \");\n  if (!ALLOWED_STATUSES.has(head.status)) {\n    return [\n      `${head.name} is in state ${head.status} at the head commit,`,\n      `not ${allowedStatus}; an EIP editor needs to approve this change`\n    ].join(\" \");\n  } else if (!ALLOWED_STATUSES.has(base.status)) {\n    const allowedStatus = [...ALLOWED_STATUSES].join(\" or \");\n    return [\n      `${base.name} is in state ${base.status} at the base commit,`,\n      `not ${allowedStatus}; an EIP editor needs to approve this change`\n    ].join(\" \");\n  } else return;\n};\n"]}