{"version":3,"file":"require_files.js","sourceRoot":"","sources":["../../../../src/modules/assertions/require_files.ts"],"names":[],"mappings":";;;AACA,sDAA6D;AAC7D,6CAA0C;AAE1C;;;;;GAKG;AACI,MAAM,YAAY,GAAG,KAAK,EAAE,EAAM,EAAkB,EAAE;IAC3D,MAAM,KAAK,GAAG,MAAM,eAAM,CAAC,mBAAmB,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;IAE1D,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE;QAClB,MAAM,IAAI,iCAAoB,CAC5B;YACE,4CAA4C;YAC5C,4BAA4B;SAC7B,CAAC,IAAI,CAAC,GAAG,CAAC,CACZ,CAAC;KACH;IAED,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAbW,QAAA,YAAY,gBAavB","sourcesContent":["import { Files, PR } from \"src/domain\";\nimport { RequirementViolation } from \"src/domain/exceptions\";\nimport { github } from \"src/infra/github\";\n\n/**\n * compares the diff between the base commit of the PR and\n * the head commit; if no files were found then it will explode\n *\n * @returns {File}\n */\nexport const requireFiles = async (pr: PR): Promise<Files> => {\n  const files = await github.getPullRequestFiles(pr.number);\n\n  if (!files?.length) {\n    throw new RequirementViolation(\n      [\n        \"There were no files found to be associated\",\n        \"with the PR within context\"\n      ].join(\" \")\n    );\n  }\n\n  return files;\n};\n"]}