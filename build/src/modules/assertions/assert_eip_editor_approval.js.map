{"version":3,"file":"assert_eip_editor_approval.js","sourceRoot":"","sources":["../../../../src/modules/assertions/assert_eip_editor_approval.ts"],"names":[],"mappings":";;;AACA,2CAA2C;AAC3C,6CAAiD;AAEjD,sEAAsE;AAC/D,MAAM,uBAAuB,GAAG,KAAK,EAAE,QAAkB,EAAE,EAAE;IAClE,MAAM,SAAS,GAAG,MAAM,IAAA,wBAAY,GAAE,CAAC;IACvC,MAAM,OAAO,GAAG,IAAA,8BAAiB,EAAC,QAAQ,CAAC,CAAC;IAE5C,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5E,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,wCAAwC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;KACtE;;QAAM,OAAO;AAChB,CAAC,CAAC;AARW,QAAA,uBAAuB,2BAQlC","sourcesContent":["import { FileDiff } from \"src/domain\";\nimport { getApprovals } from \"#/approvals\";\nimport { requireEIPEditors } from \"#/assertions\";\n\n/** returns an error string if the PR does NOT have editor approval */\nexport const assertEIPEditorApproval = async (fileDiff: FileDiff) => {\n  const approvals = await getApprovals();\n  const editors = requireEIPEditors(fileDiff);\n\n  const isApproved = approvals.find((approver) => editors.includes(approver));\n  if (!isApproved) {\n    return `This PR requires review from one of [${editors.join(\", \")}]`;\n  } else return;\n};\n"]}