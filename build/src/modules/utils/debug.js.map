{"version":3,"file":"debug.js","sourceRoot":"","sources":["../../../../src/modules/utils/debug.ts"],"names":[],"mappings":";;;AAAA,8CAA8C;AAC9C,sDAAsD;AAE/C,MAAM,QAAQ,GAAG,KAAK,EAAE,QAA4B,EAAE,EAAE;IAC7D,MAAM,OAAO,GACX,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,gBAAQ,CAAC,WAAW;QAC7C,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,gBAAQ,CAAC,IAAI,CAAC;IAEzC,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,0BAAa,CAAC,yCAAyC,CAAC,CAAC;IAErE,kBAAkB;IAClB,IAAA,uBAAe,EAAC,QAAQ,CAAC,CAAC;IAE1B,yDAAyD;IACzD,mEAAmE;IACnE,MAAM,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;IACtC,OAAO,MAAM,IAAI,EAAE,CAAC;AACtB,CAAC,CAAC;AAfW,QAAA,QAAQ,YAenB;AAEK,MAAM,eAAe,GAAG,CAAC,QAA4B,EAAE,EAAE;IAC9D,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,CAAC,GAAG,EAAE,GAAG,QAAQ,EAAE,CAAC;IAC5C,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IAElB,0EAA0E;IAC1E,MAAM,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC;IAEnD,OAAO,CAAC,OAAO,CAAC,YAAY,GAAG;QAC7B,IAAI,EAAE;YACJ,GAAG,EAAE,GAAG,CAAC,QAAQ;SAClB;QACD,IAAI,EAAE;YACJ,GAAG,EAAE,GAAG,CAAC,QAAQ;SAClB;QACD,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,WAAW,IAAI,EAAE,CAAC,IAAI,CAAC;KAC7C,CAAC;IAEF,OAAO,CAAC,OAAO,CAAC,UAAU,GAAG;QAC3B,aAAa;QACb,IAAI,EAAE,GAAG,CAAC,SAAS;QACnB,KAAK,EAAE;YACL,GAAG,EAAE,EAAE;YACP,aAAa;YACb,KAAK,EAAE,GAAG,CAAC,eAAe;YAC1B,IAAI,EAAE,GAAG,CAAC,eAAe;SAC1B;QACD,SAAS,EAAE,GAAG,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,SAAS,EAAE;KAChD,CAAC;IACF,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC;AACrC,CAAC,CAAC;AA7BW,QAAA,eAAe,mBA6B1B","sourcesContent":["import { NodeEnvs } from \"../../domain/Types\";\nimport { CriticalError } from \"src/domain/exceptions\";\n\nexport const __MAIN__ = async (debugEnv?: NodeJS.ProcessEnv) => {\n  const isDebug =\n    process.env.NODE_ENV === NodeEnvs.developemnt ||\n    process.env.NODE_ENV === NodeEnvs.test;\n\n  if (!isDebug)\n    throw new CriticalError(\"trying to run debug without proper auth\");\n\n  // setup debug env\n  setDebugContext(debugEnv);\n\n  // by instantiating after context and env are custom set,\n  // it allows for a custom environment that's setup programmatically\n  const main = require(\"src/main\").main;\n  return await main();\n};\n\nexport const setDebugContext = (debugEnv?: NodeJS.ProcessEnv) => {\n  const env = { ...process.env, ...debugEnv };\n  process.env = env;\n\n  // By instantiating after above it allows it to initialize with custom env\n  const context = require(\"@actions/github\").context;\n\n  context.payload.pull_request = {\n    base: {\n      sha: env.BASE_SHA\n    },\n    head: {\n      sha: env.HEAD_SHA\n    },\n    number: parseInt(env.PULL_NUMBER || \"\") || 0\n  };\n\n  context.payload.repository = {\n    // @ts-ignore\n    name: env.REPO_NAME,\n    owner: {\n      key: \"\",\n      // @ts-ignore\n      login: env.REPO_OWNER_NAME,\n      name: env.REPO_OWNER_NAME\n    },\n    full_name: `${env.REPO_OWNER}/${env.REPO_NAME}`\n  };\n  context.eventName = env.EVENT_TYPE;\n};\n"]}