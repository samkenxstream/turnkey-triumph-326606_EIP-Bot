{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/tests/assets/records/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { MockRecord, requireMockMethod } from \"src/domain\";\nimport { CriticalError } from \"src/domain/exceptions\";\n\nexport enum SavedRecord {\n  /**\n   * **SHOULD FAIL**\n   *\n   * Summary: editor approval wasn't required if the author of the PR was an editor\n   *\n   * Explanation: if an editor is an author of an EIP and they submit a PR, then the\n   * bot will assume that it has been approved by the editor. But this shouldn't happen.\n   * The fix to this bug was considering EIP_EDITORS to be dynamic based on the eip / file\n   * at hand. So if an editor is an author they won't be consider an editor for that test.\n   * */\n  PR3596 = \"3596\",\n  /** **SHOULD PASS**\n   *\n   *  Summary: wasn't passing despite editor approval\n   *\n   *  Explanation: The cause of the bug was that the EIP_EDITORS list had capitals in it,\n   *  so when it was checking if it was in the list it wouldn't match MicahZoltu\n   *  to micahzoltu. And so it failed.\n   */\n  PR3654_1 = \"3654_1\",\n  /** **SHOULD FAIL**\n   *\n   *  Summary: editors weren't mentioned if there was only a valid status error\n   *\n   *  Explanation: The cause of this bug was that despite there being a valid status error\n   *  (i.e. status is Final) and that requiring editor approval the logic\n   *  that actually collected the mentions didn't account for it. So I added that\n   *  logic and it was golden\n   */\n  PR3654_2 = \"3654_2\",\n  /**\n   * **SHOULD PASS**\n   *\n   * @summary: [false alarm] greg opened a pull request and it automatically merged for\n   *  an unknown reason. There were no editor reviews.\n   *\n   * @description: This was perceived as an error because greg moved the status from\n   * draft to review at first but then reverted this change. In this case it was\n   * expected behavior to auto merge; but it was incorrect interpreted.\n   */\n  PR3767 = \"3767\",\n  /**\n   * @summary: a pull request changed the status from last call to review,\n   * it was caught by the linter but the editors weren't mentioned and they\n   * were presumably not required\n   *\n   * @description:\n   */\n  PR3676 = \"3676\",\n  /**\n   * **SHOULD PASS**\n   *\n   * @summary: multi-file PR change with bot\n   */\n  PR3612 = \"3612\",\n  /**\n   * **SHOULD FAIL**\n   *\n   * @summary: multi-file PR that does not have the necessary reviews for it to pass\n   */\n  PR4192 = \"4192\",\n  /**\n   * **SHOULD SUCCEED**\n   *\n   * @summary: this is one where the bot mentioned the email of the user when\n   * it couldn't find the username. Either try to\n   */\n  PR3768_1 = \"3768_1\",\n  /**\n   * **SHOULD FAIL**\n   *\n   * @summary: Same as PR3768_1 but in this case I deleted the author's review;\n   * the goal is to use this PR to verify that an author with an email won't be\n   * mentioned.\n   */\n  PR3768_2 = \"3768_2\",\n  /**\n   * **SHOULD PASS**\n   *\n   * @summary: PR3623 was approved by the author but it didn't merge, so this\n   * was a bug where author's approval didn't actually merge anything\n   */\n  PR3623 = \"3623\",\n  /**\n   * @summary: this is an example PR that was used to implement the feature\n   * that authors be allowed to submit a PR to mark their EIP withdrawn and\n   * that should be merged automatically\n   */\n  PR4189 = \"4189\",\n  /**\n   * @summary: this pull request automatically merged despite the tests failing\n   * it was due to the fact unhandled errors never triggered a critical failure\n   */\n  PR4478 = \"4478\",\n  /**\n   * @summary: a change to eip-1 that's not able to discern the authors\n   */\n  PR4499 = \"4499\",\n  /**\n   *\n   * @summary: the bot didn't fail gracefully on an asset file because the filename\n   * provided was just the file's name instead of the path; I made all of the uses\n   * of requireEIPNumber use path instead\n   * @description: the bot reported\n   * > ## (fail) eip-3448.md\n   * > - eip-3448 state was changed from draft to review\n   * > - This PR requires review from one of [@micahzoltu, @lightclient, @axic]\n   * > ## (fail) assets/eip-3448/MetaProxyFactory.sol\n   * > - 'MetaProxyFactory.sol' must be in eip-###.md format; this error will be overwritten upon relevant editor approval\n   *\n   * but it should have had a graceful failure on the assets/eip-3448/MetaProxyFactory.sol\n   *\n   * The problem was that it was evaluating the filename (MetaProxyFactory.sol) instead\n   * of the path (assets/eip-3448/MetaProxyFactory.sol) so the code had no way\n   * of knowing.\n   */\n  PR4506 = \"4506\",\n  /**\n   * @summary: this pull request was approved by an editor but it still said that it was not\n   *\n   * @description: \n   * The bug here was a result of the fact that github limits the number of\n   * responses it can return. At the time of this pull request the max number of\n   * reviews that could be returned was 30. But there were closer to 60 on the\n   * pull request. So when the bot requested reviews, it got back a truncated\n   * list that lacked the editor's approval. To fix this I built in a mechanism\n   * to get all reviews (no matter how many) and I increased the max to 100.\n   */\n  PR4361 = \"4361\"\n}\n\n/**\n * This will error if the provided string is not a known SavedRecord\n * @param maybeSavedRecord a string corresponding to a known SavedRecord\n */\nexport function assertSavedRecord(\n  maybeSavedRecord: string\n): asserts maybeSavedRecord is SavedRecord {\n  const savedRecords = Object.values(SavedRecord);\n\n  // @ts-expect-error savedRecords is actually a string[]\n  if (!savedRecords.includes(maybeSavedRecord)) {\n    throw new CriticalError(\n      `${maybeSavedRecord} is not a SavedRecord, the options are ${savedRecords}`\n    );\n  }\n}\n\nconst assertMethods = (records: { default: MockRecord[] }) => {\n  records.default.map(\n    (record) => record.req?.method && requireMockMethod(record.req.method)\n  );\n};\nexport const getMockRecords = async () => {\n  const PR3767 = await import(\"./3767.json\");\n  const PR3676 = await import(\"./3676.json\");\n  const PR3612 = await import(\"./3612.json\");\n  const PR4192 = await import(\"./4192.json\");\n  const PR3768_1 = await import(\"./3768/1.json\");\n  const PR3768_2 = await import(\"./3768/2.json\");\n  const PR3596 = await import(\"./3596.json\");\n  const PR3654_1 = await import(\"./3654/1.json\");\n  const PR3654_2 = await import(\"./3654/2.json\");\n  const PR3623 = await import(\"./3623.json\");\n  const PR4189 = await import(\"./4189.json\");\n  const PR4478 = await import(\"./4478.json\");\n  const PR4499 = await import(\"./4499.json\");\n  const PR4506 = await import(\"./4506.json\");\n  const PR4361 = await import(\"./4361.json\");\n\n  assertMethods(PR3767);\n  assertMethods(PR3676);\n  assertMethods(PR3612);\n  assertMethods(PR4192);\n  assertMethods(PR3768_1);\n  assertMethods(PR3768_2);\n  assertMethods(PR3596);\n  assertMethods(PR3654_1);\n  assertMethods(PR3654_2);\n  assertMethods(PR3623);\n  assertMethods(PR4189);\n  assertMethods(PR4478);\n  assertMethods(PR4506);\n  assertMethods(PR4361);\n\n  const Records: { [k in keyof typeof SavedRecord]: MockRecord[] } = {\n    PR3596: PR3596.default,\n    PR3654_1: PR3654_1.default,\n    PR3654_2: PR3654_2.default,\n    PR3767: PR3767.default,\n    PR3676: PR3676.default,\n    PR3612: PR3612.default,\n    PR4192: PR4192.default,\n    PR3768_1: PR3768_1.default,\n    PR3768_2: PR3768_2.default,\n    PR3623: PR3623.default,\n    PR4189: PR4189.default,\n    PR4478: PR4478.default,\n    PR4499: PR4499.default,\n    PR4506: PR4506.default,\n    PR4361: PR4361.default\n  };\n  return Records;\n};\n"]}